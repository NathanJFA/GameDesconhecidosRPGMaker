  /*
        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("../../Telas/FrameCadastro.fxml"));
        Parent root = fxmlLoader.load();
        Scene tela = new Scene(root);

        stage.setScene(tela);
        stage.show();
        */


    /*
        private Stage primaryStage;
    private BorderPane rootLayout;

    @Override
    public void start(Stage primaryStage) {
        this.primaryStage = primaryStage;
        this.primaryStage.setTitle("AddressApp");
@../img/ceu.jpe@../img/ceu.jpe'
        initRootLayout();

        showPersonOverview();
    }
    
    /**
     * Inicializa o root layout (layout base).
     *
    public void initRootLayout() {
        try {
            // Carrega o root layout do arquivo fxml.
            FXMLLoader loader = new FXMLLoader();
            loader.setLocation(MainApp.class.getResource("view/RootLayout.fxml"));
            rootLayout = (BorderPane) loader.load();
            
            // Mostra a scene (cena) contendo o root layout.
            Scene scene = new Scene(rootLayout);
            primaryStage.setScene(scene);
            primaryStage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    */



            /**
         * TESTE DE CONEX√ÉO CASO FOR UTILIZAR A CLASSE  connMysql
         * connMysql.getConnection();
         * JOptionPane.showMessageDialog(null, connMysql.statusConection());
        */  

            /**
     * ESTUDANDO A PLATAFORMA P INTRODUZIR BANCO DE DADOS connMysql
     * connMysql bd = new connMysql();
     * /

     import javax.sound.sampled.*;
import java.io.*;
/////////////////////////////////////
public class Sound {
	
	public static class Clips{
		public Clip[] clips;
		private int p;
		private int count;
		
		public Clips(byte[] buffer, int count) throws LineUnavailableException, IOException, UnsupportedAudioFileException{
			if(buffer == null) {
				return;
			}
			
			clips = new Clip[count];
			this.count = count;
			
			for(int i = 0; i < count; i++) {
				clips[i] = AudioSystem.getClip();
				clips[i].open(AudioSystem.getAudioInputStream(new ByteArrayInputStream(buffer)));
			}
		}
		
		public void play() {
			if(clips == null) {
				return;
			}
			clips[p].stop();
			clips[p].setFramePosition(0);
			clips[p].start();
			p++;
			if(p>=count) {
				p=0;
			}
		}
		
		public void loop() {
			if(clips == null) {
				return;
			}
			clips[p].loop(300);
		}
		
		public static Clips music = load("/musica.wav",1);
		public static Clips Bullet_Shoot = load("/Bullet_Shoot.wav",1);
		
		private static Clips load(String name,int count) {
			try {
				ByteArrayOutputStream baos = new ByteArrayOutputStream();
				DataInputStream dis = new DataInputStream(Sound.class.getResourceAsStream(name));
				
				byte[] buffer = new byte[1064];
				int read = 0;
				while((read = dis.read(buffer)) >= 0) {
					baos.write(buffer,0,read);
				}
				dis.close();
				byte[] data = baos.toByteArray();
				return new Clips(data,count);
				
			}catch(Exception e){
				try {
					System.out.println("Arquivo de som nao encontrado");
					return new Clips(null,0);
				}catch(Exception ee) {
					return null;
				}
			}
			
		}
	}
	
}